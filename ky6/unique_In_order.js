// ❓ Реализуйте функцию unique_in_order, которая принимает 
// в качестве аргумента последовательность и возвращает 
// список элементов без каких-либо элементов с одинаковым 
// значением рядом друг с другом и сохраняет исходный порядок 
// элементов.

// Например:

// uniqueInOrder('AAAABBBCCDAABBB') == ['A', 'B', 'C', 'D', 'A', 'B']
// uniqueInOrder('ABBCcAD')         == ['A', 'B', 'C', 'c', 'A', 'D']
// uniqueInOrder([1,2,2,3,3])       == [1,2,3]


// ✅ SOLUTION:

var uniqueInOrder=function(iterable){
    if (iterable.length === 0) { // ебанная ошибка на пустой массив и ее решение блядское
        return [];
      }
    let a = [iterable[0]] // создаем массив с уникальными значениями по умолчанию закидываем сюда 1 элемент массива
    for (let i = 1; i < iterable.length; i++) { // пробегаем по массиву со 2 элемента так как 1 уже есть в массиве
         if (iterable[i] !== a[a.length - 1]) { // сравниваем наш элемент из основного массива с последним элементом 
            //нашего нового массива в случае их не равенства закидываем в новый массив его 
            a.push(iterable[i])
        }
        
    }
    return a
}