// В маленьком городке численность населения составляет p0 = 1000 
// в начале года. Численность населения регулярно увеличивается 
// на 2 percent в год, и, более того, 50 каждый год в город приезжают 
// новые жители. Сколько лет город нужно увидеть его население больше 
// или равно p = 1200 жителей?

// At the end of the first year there will be: 
// 1000 + 1000 * 0.02 + 50 => 1070 inhabitants

// At the end of the 2nd year there will be: 
// 1070 + 1070 * 0.02 + 50 => 1141 inhabitants (** number of inhabitants is an integer **)

// At the end of the 3rd year there will be:
// 1141 + 1141 * 0.02 + 50 => 1213

// It will need 3 entire years.
// Более общие параметры:

// p0, percent, aug (inhabitants coming or leaving each year), 
// p (population to equal or surpass)

// функция nb_year должна вернуть n количество целых лет, 
// необходимое для получения совокупности, большей или равной p.

// aug - целое число, percent - положительное или нулевое 
// число с плавающей запятой, p0 и p - положительные целые числа (> 0)

// Examples:
// nb_year(1500, 5, 100, 5000) -> 15
// nb_year(1500000, 2.5, 10000, 2000000) -> 10
// Примечание:
// Не забудьте преобразовать параметр percent в процентах 
// в теле вашей функции: если параметр percent равен 2, вы 
// должны преобразовать его в 0.02.

// Здесь нет дробных чисел. В конце каждого года подсчет 
// численности населения представляет собой целое число: 
// 252.8 люди округляются в меньшую сторону до 252 человек.



// ✅ SOLUTION: 


function nbYear(p0, percent, aug, p) {
    let year = 0;
    while (p0 < p) {
      
      p0 = Math.floor(p0 + p0 * percent / 100 + aug) 
      year = year + 1
    }
  return year
  }



